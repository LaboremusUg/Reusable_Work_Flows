name: aspnetcore_root_workflow
on:
  workflow_call:
    inputs:
      CLIENT:
        type: string
      CLIENT_ENV:
        type: string
      SITE_NAME:
        type: string
      DOTNET_VERSION:
        type: string
      WEBDEPLOY_USER: 
        type: string
      SERVER_IP:
        type: string
      SERVER_PORT:
        type: string
      PROJECT_ROOT_DIRECTORY:
        type: string
    secrets:
      NUGET_URL:
        required: true
      NUGET_TOKEN:
        required: true
      WEBDEPLOY_PASSWORD:
        required: true
      AZURE_WEBAPP_PUBLISH_PROFILE:
        required: true
      AZURE_WEBAPP_NAME:
        required: true
      AZURE_WEBAPP_PACKAGE_PATH:
        required: true
        
jobs:
  Build-and-deploy-to-azure:
    runs-on: windows-latest
    environment: 'Production'
    steps:
      - uses: actions/checkout@v2
      - name: Setup .NET
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: ${{ inputs.DOTNET_VERSION }}
          source-url: ${{ secrets.NUGET_URL }}
        env:
          NUGET_AUTH_TOKEN: ${{ secrets.NUGET_TOKEN }}
      - name: Build and publish
        run: |
          dotnet build -c Release
          dotnet publish --no-build -c Release -o ${{ env.DOTNET_ROOT}}\${{ inputs.PROJECT_ROOT_DIRECTORY }} /p:EnvironmentName=${{ inputs.CLIENT }}${{ inputs.CLIENT_ENV }}
      - name: Clean appsettings
        run: |
          cd ${{ env.DOTNET_ROOT}}/${{ inputs.PROJECT_ROOT_DIRECTORY }}
          $jsonFiles = Get-ChildItem appsettings*json
          foreach ($file in $jsonFiles) {
            if ($file.Name -inotcontains "appsettings.json") {
              if ($file.Name -inotcontains "appsettings.Config.json") {
                if ($file.Name -inotcontains "appsettings.${{inputs.CLIENT}}${{inputs.CLIENT_ENV}}.json"){
                  #Write-Host -id 3 -activity "Removing File $($file.Name)" -Status "In progress"
                  Write-Host "$(Get-Date -f $timeStampFormat) - Removing File $($file.Name): In progress"
                  Remove-Item $file
                }
              }     
            }   
          }
          cd ..
        shell: pwsh
        
      - name: 'Deploy to Azure WebApp'
      id: deploy-to-webapp 
      uses: azure/webapps-deploy@v2
       with:
        app-name: ${{ env.AZURE_WEBAPP_NAME }}
        publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
        package: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}
